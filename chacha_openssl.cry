module chacha_opensll where 

type Chacha_buf = {
    u : [16][32],
    c : [64][8]
}
type Random = [16][8]

ROTATE : [32] -> Integer -> [32]
ROTATE v n = ((v << n) || (v >> (32-n)))

ChaChaQuarterround : [4][32] -> [4][32]
ChaChaQuarterround [a, b, c, d] = [a'', b'', c'', d''] where
    a' = a + b
    d' = (d ^ a') <<< 16
    c' = c + d'
    b' = (b ^ c') <<< 12
    a'' = a' + b'
    d'' = (d' ^ a'') <<< 8
    c'' = c' + d''
    b'' = (b' ^ c'') <<< 7

ChaCharound : [16][32] -> [16][32]
ChaCharound [ x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 ]
      = [ z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15 ]
  where
    // Column round
    [ y0, y4, y8,  y12 ] = ChaChaQuarterround [ x0, x4, x8,  x12 ]
    [ y1, y5, y9,  y13 ] = ChaChaQuarterround [ x1, x5, x9,  x13 ]
    [ y2, y6, y10, y14 ] = ChaChaQuarterround [ x2, x6, x10, x14 ]
    [ y3, y7, y11, y15 ] = ChaChaQuarterround [ x3, x7, x11, x15 ]

    // Diagonal round
    [ z0, z5, z10, z15 ] = ChaChaQuarterround [ y0, y5, y10, y15 ]
    [ z1, z6, z11, z12 ] = ChaChaQuarterround [ y1, y6, y11, y12 ]
    [ z2, z7, z8,  z13 ] = ChaChaQuarterround [ y2, y7, y8,  y13 ]
    [ z3, z4, z9,  z14 ] = ChaChaQuarterround [ y3, y4, y9,  y14 ]

chacha20_core : [16][32] -> Chacha_buf-> ([16][32], Chacha_buf)
chacha20_core input output = (input', output')
     where output' = {u = (input + input') 
                      ,c = output.c}
           input' = (iterate ChaCharound input) @ 10
                    

testInput = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
testBuf_u = [2147483648,2147483648,2147483648,2147483648,2147483648,2147483648,2147483648,2147483648,2147483648,2147483648,2147483648,2147483648,2147483648,2147483648,2147483648,2147483648]
testBuf_c = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
testBuf = {u = testBuf_u, c = testBuf_c}

testInput2 = [2078609256,502481067,997930854,95371576,2196139849,2109880764,1791503143,1597382513,2862857106,1036534222,315038205,
1613352389,4248443903,2724378768,1987494519,4029436897]
testBuf_u2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
tetsBuf2 = { u = testBuf_u2, c = tetsBuf_c}

